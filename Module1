import os


# Function to read DNA sequences from a file
def read_sequences_from_file(filename):
    sequences = []
    try:
        with open(filename, "r") as file:
            for line in file:
                sequences.append(line.strip())
    except FileNotFoundError:
        print("File not found.")
    return sequences


# Function to calculate the number of matches between two DNA sequences
def calculate_matches(sequence1, sequence2):
    match_count = sum(char1 == char2 for char1, char2 in zip(sequence1, sequence2))
    print(f"Number of Matches without Shifts: {match_count}")


# Function to calculate the maximum contiguous chain between two DNA sequences
def calculate_max_contiguous_chain(sequence1, sequence2):
    max_contiguous_chain = 0
    current_contiguous_chain = 0

    for char1, char2 in zip(sequence1, sequence2):
        if char1 == char2:
            current_contiguous_chain += 1
            max_contiguous_chain = max(max_contiguous_chain, current_contiguous_chain)
        else:
            current_contiguous_chain = 0

    print(f"Maximum Contiguous Chain: {max_contiguous_chain}")


# Function to set the maximum shift based on user input
def set_max_shift():
    max_shift = int(input("Enter the maximum shift: "))
    return max_shift


# Function to calculate the number of matches with shifts iterating through the maximum shift
def calculate_matches_with_shifts(sequence1, sequence2, max_shift):
    max_match_count = 0
    best_shift = 0

    for shift in range(1, max_shift + 1):
        shifted_sequence1 = sequence1[-shift:] + sequence1[:-shift]
        match_count = sum(
            char1 == char2 for char1, char2 in zip(shifted_sequence1, sequence2)
        )

        if match_count > max_match_count:
            max_match_count = match_count
            best_shift = shift

    print(f"Number of Matches with Maximum Shift ({best_shift}): {max_match_count}")


# Main menu for user interaction
def main_menu():
    while True:
        print("\nMain Menu:")
        print("1. Calculate Number of Matches (Console Input)")
        print("2. Calculate Maximum Contiguous Chain (Console Input)")
        print("3. Calculate Number of Matches with Maximum Shift (Console Input)")
        print("4. Calculate Number of Matches (File Input)")
        print("5. Calculate Maximum Contiguous Chain (File Input)")
        print("6. Exit")
        choice = input("Enter your choice: ")

        if choice == "1":
            sequence1 = input("Enter the first DNA sequence: ").upper()
            sequence2 = input("Enter the second DNA sequence: ").upper()
            calculate_matches(sequence1, sequence2)
        elif choice == "2":
            sequence1 = input("Enter the first DNA sequence: ").upper()
            sequence2 = input("Enter the second DNA sequence: ").upper()
            calculate_max_contiguous_chain(sequence1, sequence2)
        elif choice == "3":
            sequence1 = input("Enter the first DNA sequence: ").upper()
            sequence2 = input("Enter the second DNA sequence: ").upper()
            max_shift = set_max_shift()
            calculate_matches_with_shifts(sequence1, sequence2, max_shift)
        elif choice == "4":
            filename = input("Enter the filename: ")
            sequences = read_sequences_from_file(filename)
            if len(sequences) >= 2:
                calculate_matches(sequences[0], sequences[1])
            else:
                print("File must contain at least two sequences.")
        elif choice == "5":
            filename = input("Enter the filename: ")
            sequences = read_sequences_from_file(filename)
            if len(sequences) >= 2:
                calculate_max_contiguous_chain(sequences[0], sequences[1])
            else:
                print("File must contain at least two sequences.")
        elif choice == "6":
            print("Exiting program.")
            break
        else:
            print("Invalid choice. Please select a valid option.")


if __name__ == "__main__":
    main_menu()
